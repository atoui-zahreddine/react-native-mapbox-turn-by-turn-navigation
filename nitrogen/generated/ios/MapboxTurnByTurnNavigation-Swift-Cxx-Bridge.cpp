///
/// MapboxTurnByTurnNavigation-Swift-Cxx-Bridge.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "MapboxTurnByTurnNavigation-Swift-Cxx-Bridge.hpp"

// Include C++ implementation defined types
#include "HybridMapboxTurnByTurnNavigationSpecSwift.hpp"
#include "MapboxTurnByTurnNavigation-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::mapboxturnbyturnnavigation::bridge::swift {

  // pragma MARK: std::function<void()>
  Func_void create_Func_void(void* _Nonnull swiftClosureWrapper) {
    auto swiftClosure = MapboxTurnByTurnNavigation::Func_void::fromUnsafe(swiftClosureWrapper);
    return [swiftClosure = std::move(swiftClosure)]() mutable -> void {
      swiftClosure.call();
    };
  }
  
  // pragma MARK: std::function<void(const WaypointEvent& /* event */)>
  Func_void_WaypointEvent create_Func_void_WaypointEvent(void* _Nonnull swiftClosureWrapper) {
    auto swiftClosure = MapboxTurnByTurnNavigation::Func_void_WaypointEvent::fromUnsafe(swiftClosureWrapper);
    return [swiftClosure = std::move(swiftClosure)](const WaypointEvent& event) mutable -> void {
      swiftClosure.call(event);
    };
  }
  
  // pragma MARK: std::function<void(const Coordinate& /* event */)>
  Func_void_Coordinate create_Func_void_Coordinate(void* _Nonnull swiftClosureWrapper) {
    auto swiftClosure = MapboxTurnByTurnNavigation::Func_void_Coordinate::fromUnsafe(swiftClosureWrapper);
    return [swiftClosure = std::move(swiftClosure)](const Coordinate& event) mutable -> void {
      swiftClosure.call(event);
    };
  }
  
  // pragma MARK: std::function<void(const LocationData& /* event */)>
  Func_void_LocationData create_Func_void_LocationData(void* _Nonnull swiftClosureWrapper) {
    auto swiftClosure = MapboxTurnByTurnNavigation::Func_void_LocationData::fromUnsafe(swiftClosureWrapper);
    return [swiftClosure = std::move(swiftClosure)](const LocationData& event) mutable -> void {
      swiftClosure.call(event);
    };
  }
  
  // pragma MARK: std::function<void(const RouteProgress& /* event */)>
  Func_void_RouteProgress create_Func_void_RouteProgress(void* _Nonnull swiftClosureWrapper) {
    auto swiftClosure = MapboxTurnByTurnNavigation::Func_void_RouteProgress::fromUnsafe(swiftClosureWrapper);
    return [swiftClosure = std::move(swiftClosure)](const RouteProgress& event) mutable -> void {
      swiftClosure.call(event);
    };
  }
  
  // pragma MARK: std::function<void(const Message& /* error */)>
  Func_void_Message create_Func_void_Message(void* _Nonnull swiftClosureWrapper) {
    auto swiftClosure = MapboxTurnByTurnNavigation::Func_void_Message::fromUnsafe(swiftClosureWrapper);
    return [swiftClosure = std::move(swiftClosure)](const Message& error) mutable -> void {
      swiftClosure.call(error);
    };
  }
  
  // pragma MARK: std::shared_ptr<margelo::nitro::mapboxturnbyturnnavigation::HybridMapboxTurnByTurnNavigationSpec>
  std::shared_ptr<margelo::nitro::mapboxturnbyturnnavigation::HybridMapboxTurnByTurnNavigationSpec> create_std__shared_ptr_margelo__nitro__mapboxturnbyturnnavigation__HybridMapboxTurnByTurnNavigationSpec_(void* _Nonnull swiftUnsafePointer) {
    MapboxTurnByTurnNavigation::HybridMapboxTurnByTurnNavigationSpec_cxx swiftPart = MapboxTurnByTurnNavigation::HybridMapboxTurnByTurnNavigationSpec_cxx::fromUnsafe(swiftUnsafePointer);
    return std::make_shared<margelo::nitro::mapboxturnbyturnnavigation::HybridMapboxTurnByTurnNavigationSpecSwift>(swiftPart);
  }
  void* _Nonnull get_std__shared_ptr_margelo__nitro__mapboxturnbyturnnavigation__HybridMapboxTurnByTurnNavigationSpec_(std__shared_ptr_margelo__nitro__mapboxturnbyturnnavigation__HybridMapboxTurnByTurnNavigationSpec_ cppType) {
    std::shared_ptr<margelo::nitro::mapboxturnbyturnnavigation::HybridMapboxTurnByTurnNavigationSpecSwift> swiftWrapper = std::dynamic_pointer_cast<margelo::nitro::mapboxturnbyturnnavigation::HybridMapboxTurnByTurnNavigationSpecSwift>(cppType);
  #ifdef NITRO_DEBUG
    if (swiftWrapper == nullptr) [[unlikely]] {
      throw std::runtime_error("Class \"HybridMapboxTurnByTurnNavigationSpec\" is not implemented in Swift!");
    }
  #endif
    MapboxTurnByTurnNavigation::HybridMapboxTurnByTurnNavigationSpec_cxx& swiftPart = swiftWrapper->getSwiftPart();
    return swiftPart.toUnsafe();
  }

} // namespace margelo::nitro::mapboxturnbyturnnavigation::bridge::swift
