///
/// JMessage.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "Message.hpp"

#include <optional>
#include <string>

namespace margelo::nitro::mapboxturnbyturnnavigation {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "Message" and the the Kotlin data class "Message".
   */
  struct JMessage final: public jni::JavaClass<JMessage> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/mapboxturnbyturnnavigation/Message;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct Message by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    Message toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldMessage = clazz->getField<jni::JString>("message");
      jni::local_ref<jni::JString> message = this->getFieldValue(fieldMessage);
      return Message(
        message != nullptr ? std::make_optional(message->toStdString()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JMessage::javaobject> fromCpp(const Message& value) {
      return newInstance(
        value.message.has_value() ? jni::make_jstring(value.message.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::mapboxturnbyturnnavigation
