///
/// JTravelModeEnum.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "TravelModeEnum.hpp"

namespace margelo::nitro::mapboxturnbyturnnavigation {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ enum "TravelModeEnum" and the the Kotlin enum "TravelModeEnum".
   */
  struct JTravelModeEnum final: public jni::JavaClass<JTravelModeEnum> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/mapboxturnbyturnnavigation/TravelModeEnum;";

  public:
    /**
     * Convert this Java/Kotlin-based enum to the C++ enum TravelModeEnum.
     */
    [[maybe_unused]]
    [[nodiscard]]
    TravelModeEnum toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldOrdinal = clazz->getField<int>("_ordinal");
      int ordinal = this->getFieldValue(fieldOrdinal);
      return static_cast<TravelModeEnum>(ordinal);
    }

  public:
    /**
     * Create a Java/Kotlin-based enum with the given C++ enum's value.
     */
    [[maybe_unused]]
    static jni::alias_ref<JTravelModeEnum> fromCpp(TravelModeEnum value) {
      static const auto clazz = javaClassStatic();
      static const auto fieldDRIVING = clazz->getStaticField<JTravelModeEnum>("DRIVING");
      static const auto fieldWALKING = clazz->getStaticField<JTravelModeEnum>("WALKING");
      static const auto fieldCYCLING = clazz->getStaticField<JTravelModeEnum>("CYCLING");
      static const auto fieldDRIVING_TRAFFIC = clazz->getStaticField<JTravelModeEnum>("DRIVING_TRAFFIC");
      
      switch (value) {
        case TravelModeEnum::DRIVING:
          return clazz->getStaticFieldValue(fieldDRIVING);
        case TravelModeEnum::WALKING:
          return clazz->getStaticFieldValue(fieldWALKING);
        case TravelModeEnum::CYCLING:
          return clazz->getStaticFieldValue(fieldCYCLING);
        case TravelModeEnum::DRIVING_TRAFFIC:
          return clazz->getStaticFieldValue(fieldDRIVING_TRAFFIC);
        default:
          std::string stringValue = std::to_string(static_cast<int>(value));
          throw std::invalid_argument("Invalid enum value (" + stringValue + "!");
      }
    }
  };

} // namespace margelo::nitro::mapboxturnbyturnnavigation
